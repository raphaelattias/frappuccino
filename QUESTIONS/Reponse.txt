REPONSES - PROJET DE PROGRAMMATION
ATTIAS RAPHAEL & EPPLE PASCAL
EPFL MABA2 - 2018

Ce fichier regroupe toutes nos réponses aux questions posées
semaine après semaine.


SEMAINE 1

[P1.1]

Notre conception de notre classe Vecteur est simple: un vecteur
de double et une dimension. La dimension nous semble être un attribut
qui pourrait devenir utile pour la suite du programme.

Concernant les droits d'accès, nous essayons d'encapsuler au 
maximum notre classe Vecteur. Les attributs de notre classe sont privés, mais l'utilisateur a la possibilité de les modifier ou d'y accéder à travers différentes méthodes publiques, comme les "get" ou les "set".

Au niveau des méthodes, nous n'en voyons, à ce stade, pas plus qui
pourraient nous être utiles pour la suite du projet. La seule touche
personnelle que nous avons apportée est la méthode "equilibrage" qui, 
comme le nom l'indique, remet deux vecteurs de tailles différentes à la même taille (celle du plus grand). Cette méthode nous est surtout utile pour les opérations.

[P1.2]

Nous avons choisi le choix du plongement naturel de R^m dams R^n
(pour m<n). Selon nous, il s'agit de la meilleiure solution. Cette 
méthode nous permet d'éviter qu'une opération entre deux vecteurs de tailles différentes implique une perte d'information.


SEMAINE 4

[P.4.1]

Oui, nous avons décidé d'utiliser un constructeur par copie pour notre classe vecteur. En effet un constructeur de copie permet de faciliter les tests effectués autour de la classe Vecteur. Elle autorise aussi une approche plus intuitive et pratique à la classe Vecteur.

[P.4.2]
a. Au niveau des attributs de classe, le vector de double ne changerait pas mais il faudrait un attribut pour préciser le système de coordonnées dans lequel on travaille. Par exemple un booléen si seulement deux systèmes sont possibles ou un string.
b. Ajouter un constructeur par coordonnées sphériques impliquerait lors de l'initialisation d'un vecteur à coordonnées sphériques d'effectuer à chaque fois l'opération modulo 2π sur les coordonnées angulaires. De plus il faudrait trouver une manière de différentier un vecteur à coordonnées sphériques d'un vecteur à coordonnées cartésiennes. i.e un vecteur (3, π/4, π/3) décrirait deux coordonnées totalement différentes.

[P.4.3]

Nous avons introduit les opérateurs "cout <<", "!=" et "==" afin d'assurer une continuité entre les opérateurs les plus répendus en C++ dans la manipulation d'int ou de double. L'objectif étant de rendre l'utilisation de Vecteur intuitive.
Sont également présents "+", "*", "-" et "^" (ce dernier permet de faire le produit vectoriel).

SEMAINE 6

[P.6.1] 

JE PENSE QU'IL FAUDRA PARLER DE POLYMORPHISME ET D'HERITAGE DONC JE PREFERE QU'ON LE FASSE ENSEMBLE BSX

[P.6.2]

La classe IntegrateurEulerCromer hérite de la super classe Integrateur. En effet au calcul d'intégration près, IntegrateurEulerCromer a besoin du même constructeur de copie et de l'attribut pas de temps.
